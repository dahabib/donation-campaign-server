generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      UserRoles  @default(user)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  donations Donation[]
  campaigns Campaign[]

  @@map("users")
}

enum UserRoles {
  admin
  user
}

model Category {
  id        String     @id @default(uuid())
  title     String
  textColor String     @map("text_color")
  bgColor   String     @map("bg_color")
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  campaigns Campaign[]

  @@map("categories")
}

model Campaign {
  id          String     @id @default(uuid())
  title       String
  categoryId  String     @map("category_id")
  category    Category   @relation(fields: [categoryId], references: [id])
  description String
  target      Int        @default(0)
  createdBy   String     @map("created_by")
  user        User       @relation(fields: [createdBy], references: [id])
  isActive    Boolean    @default(false)
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  donations   Donation[]

  @@map("campaigns")
}

model Donation {
  id         String   @id @default(uuid())
  amount     Int
  campaignId String   @map("campaign_id")
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  donatedBy  String?  @map("donated_by")
  user       User?    @relation(fields: [donatedBy], references: [id])
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("donations")
}
